<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper    
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace속성:매퍼파일의 완전한경로 .xml는 생략 -->
<!-- ※ibatis와는 다르게 id값에 .(dot)를 사용 못한다. -->

<mapper namespace="mybatis.Android">
	<select id="AndLogin" parameterType="java.util.Map" resultType="int">
		select count(*) from member where id=#{id} and pwd=#{pwd}
	</select>
	<select id="andSelectTeams" parameterType="java.util.Map" resultType="TeamDTO">
		select * from team where not manager_id=#{id}
	</select>
	<!-- 안드로이드에서 매칭 신청하면 isert -->
	<insert id="insertMatch" parameterType="java.util.Map">
		INSERT INTO matching VALUES(SEQ_MATCHING.NEXTVAL,(select teamname from team where manager_id=#{id}),#{awayteam},#{matchStadium},#{matchDate},#{matchTime},default)
	</insert>
	<!-- 안드로이드에 토큰 추가 -->
	<insert id="insertToken" parameterType="java.util.Map">
		INSERT INTO fcm_tokens values(SEQ_fcm_tokens.nextval,#{token})
	</insert>
	<!-- 나에게 신청한 매칭 리스트 가져오기 -->
	<select id="selectMatchList" parameterType="java.util.Map" resultType="MatchDTO">
		select m.*,t.teamloc,t.teamlogo,t.teamrating from matching m join team t on m.teamname = t.teamname 
		where m.enemyteam = (select teamname from team where manager_id=#{id}) and m.matchstatus='waiting' order by m.matchingno desc
	</select>
	<!-- 매칭 승인후 -->
	<update id="updateMatchStatus22222" parameterType="java.util.Map">
		update matching set matchstatus='finish' where matchingno = #{no}
	</update>
	<!-- 매칭 거절 후  -->
	<update id="updateMatchStatus333" parameterType="java.util.Map">
		update matching set matchstatus='cancle' where matchingno = #{no}
	</update>
	<!-- 매칭 승인 후 경기 정보 가져오기 -->
	<select id="selectGame2222" parameterType="java.util.Map" resultType="Map">
		select * from matching where matchingno = #{no}
	</select>
	<!-- 매칭 승인 후 경기 입력 -->
	<insert id="insertGameSchedule22222" parameterType="java.util.Map">
		insert into gameschedule(no,gamedate,stadium,time,awayteam,gamestatus,teamname)
		values(SEQ_GAMESCHEDULE.nextval,#{REQDATE},#{STADIUM},#{TIME},#{ENEMYTEAM},default,#{TEAMNAME})
	</insert>
	<!-- 게임 list가져오기 -->
	<select id="selectGameList2333" parameterType="java.util.Map" resultType="GameDTO">
		select g.gamedate,g.time,g.stadium,t.teamname,t.teamrating,t.teaminfo,t.teamlogo from gameschedule g join team t on g.awayteam = t.teamname or g.teamname = t.teamname 
		where (g.teamname = (select teamname from team where manager_id=#{id}) or g.awayteam = (select teamname from team where manager_id=#{id})) 
		and not t.teamname = (select teamname from team where manager_id=#{id}) order by g.gamedate desc
	</select>
	<!-- Betting List가져오기 -->
	<select id="selectBettingList222" parameterType="java.util.Map" resultType="AndBettingDTO">
		select g.no,g.gamedate,g.stadium,g.time,t.teamname hometeam,t.teamlogo homelogo,m.teamname awayteam,m.teamlogo awaylogo from gameschedule g 
		join team t on g.teamname = t.teamname join team m on g.awayteam = m.teamname
		where (g.teamname != (select teamname from team where manager_id = #{id}) and g.awayteam != (select teamname from team where manager_id = #{id})) and gamestatus = 'waiting'
	</select>
	<!-- finish list가져오기 -->
	<select id="selectFinishList222" parameterType="java.util.Map" resultType="FinishGameDTO">
		select g.no,g.gamedate,g.time,g.homescore,g.awayscore, t.teamname hometeam,t.teamlogo homelogo,m.teamname awayteam,m.teamlogo awaylogo from gameschedule g 
		join team t on g.teamname = t.teamname join team m on g.awayteam = m.teamname where gamestatus = 'finish'
	</select>
	<!-- 내 마일리지 가져오기 -->
	<select id="selectMyMileage222" parameterType="java.util.Map" resultType="int">
		select point from member where id = #{id}
	</select>
	<!-- home팀 5경기 정보 가져오기 -->
	<select id="selectHomeList222" parameterType="java.util.Map" resultType="Map">
		select * from (select * from gameschedule where (teamname = #{hometeam} or awayteam = #{hometeam}) and GAMESTATUS ='finish' order by gamedate desc)
		<![CDATA[  
		where rownum <= 5
		]]> 
	</select>
	<!-- away팀 5경기 정보 가져오기 -->
	<select id="selectAwayList222" parameterType="java.util.Map" resultType="Map">
		select * from (select * from gameschedule where (teamname = #{awayteam} or awayteam = #{awayteam}) and GAMESTATUS ='finish' order by gamedate desc)
		<![CDATA[  
		where rownum <= 5
		]]> 
	</select>
	<!-- hometeam rating -->
	<select id="selectHomeRating222" parameterType="java.util.Map" resultType="int">
		select teamrating from team where teamname = #{hometeam}
	</select>
	<!-- awayteam rating -->
	<select id="selectAwayRating222" parameterType="java.util.Map" resultType="int">
		select teamrating from team where teamname = #{awayteam}
	</select>
	<!-- 배팅버튼 클릭시 insert -->
	<insert id="insertBetting2222" parameterType="java.util.Map">
		insert into betting values(seq_bettingno.nextval,#{date},#{stadium},#{time},#{id},#{selectteam},#{bettingmileage})
	</insert>
	<!-- 배팅 후에 마일리지 차감 -->
	<update id="updateMyMileage222222" parameterType="java.util.Map">
		update member set point=point-#{bettingmileage} where id=#{id}
	</update>
	<!-- 내 아이디로 해당 경기에 베팅 기록 있는지 -->
	<select id="selectBettingMyId" parameterType="java.util.Map" resultType="Map">
		select * from betting where id=#{id} and gamedate=#{date} and time=#{time} and stadium=#{stadium}
	</select>
</mapper>
