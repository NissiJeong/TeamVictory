<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper    
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace속성:매퍼파일의 완전한경로 .xml는 생략 -->
<!-- ※ibatis와는 다르게 id값에 .(dot)를 사용 못한다. -->



<mapper namespace="mybatis.BaseBall_Hitter">
	
	<insert id="hitterInsert" parameterType="java.util.Map" >
		INSERT INTO basehitter(recordno,pa,ab,h,b2,b3,hr,rbi,sb,cs,bb,hbp,so,gdp,e,pos,horder,awayteam,gamedate,stadium,time) VALUES(basehitter_SEQ.NEXTVAL,#{baseball_pa},#{baseball_ab},#{baseball_h},#{baseball_b2},#{baseball_b3},#{baseball_hr},#{baseball_rbi},#{baseball_sb},#{baseball_cs},#{baseball_bb},#{baseball_hbp},#{baseball_so},#{baseball_gdp},#{baseball_e},#{baseball_pos},#{baseball_horder},#{baseball_awayteam},#{baseball_gamedate},#{baseball_stadium},#{baseball_time})
	</insert>
	
	<insert id="hitterInsertByPars" parameterType="java.util.Map" >
		INSERT INTO hitter(gamedate,stadium,time,id,pa,ab,r,h,hr,rbi,bb,hbp,so,gdp) 
		VALUES('19-01-01', '서울', HITTER_SEQ.NEXTVAL,#{ID},#{PA},#{AB},#{R},#{H},#{HR},#{RBI},#{BB},#{HBP},#{SO},#{GDP})
	</insert>
	
	<select id="hitterDetailView" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT * FROM (SELECT ROWNUM AS RECORDNO,  A.* FROM 
		    (SELECT GAMEDATE, STADIUM, TIME, ID,TEAMNAME, PA, AB, H, B2, B3, HR, R, RBI, SB, CS, BB, HBP, SO, GDP, E, POS, HORDER,
		        SUM(PA) OVER(ORDER BY GAMEDATE, TIME) SUMPA,
		        SUM(AB) OVER(ORDER BY GAMEDATE, TIME) SUMAB,
		        SUM(H) OVER(ORDER BY GAMEDATE, TIME) SUMH,
		        SUM(B2) OVER(ORDER BY GAMEDATE, TIME) SUMB2,
		        SUM(B3) OVER(ORDER BY GAMEDATE, TIME) SUMB3,
		        SUM(HR) OVER(ORDER BY GAMEDATE, TIME) SUMHR,
		        SUM(R) OVER(ORDER BY GAMEDATE, TIME) SUMR,
		        SUM(RBI) OVER(ORDER BY GAMEDATE, TIME) SUMRBI,
		        SUM(SB) OVER(ORDER BY GAMEDATE, TIME) SUMSB,
		        SUM(CS) OVER(ORDER BY GAMEDATE, TIME) SUMCS,
		        SUM(BB) OVER(ORDER BY GAMEDATE, TIME) SUMBB,
		        SUM(HBP) OVER(ORDER BY GAMEDATE, TIME) SUMHBP,
		        SUM(SO) OVER(ORDER BY GAMEDATE, TIME) SUMSO,
		        SUM(GDP) OVER(ORDER BY GAMEDATE, TIME) SUMGDP,
		        SUM(E) OVER(ORDER BY GAMEDATE, TIME) SUME
		        FROM hitter 
                WHERE ID=#{USER_ID} 
		        ORDER BY GAMEDATE , time ) A
		       	WHERE 
		       	<![CDATA[
                ROWNUM <=(
		        ]]>
		            select count(*) from hitter WHERE ID=#{USER_ID})
		            ) 
				WHERE
                <![CDATA[
		            RECORDNO >= (
		        ]]>
		            1
		            ) AND
                RECORDNO = (SELECT COUNT(*) FROM HITTER WHERE ID= #{USER_ID})    
		        ORDER BY GAMEDATE DESC, TIME DESC
	</select>
	
	
	
	<select id="hitterDetailViewForTeamName" parameterType="java.util.Map" resultType="java.util.Map">
		 SELECT TEAMNAME TEAMNAMEFORMODAL, COUNT(TEAMNAME) COUNT FROM HITTER WHERE ID=#{USER_ID} GROUP BY TEAMNAME ORDER BY COUNT DESC
	</select>
	
	
	
	<select id="hitterDetailViewEachTeam" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT * FROM (SELECT ROWNUM AS RECORDNO,  A.* FROM 
		    (SELECT GAMEDATE, STADIUM, TIME, ID,TEAMNAME, PA, AB, H, B2, B3, HR, R, RBI, SB, CS, BB, HBP, SO, GDP, E, POS, HORDER,
		        SUM(PA) OVER(ORDER BY GAMEDATE, TIME) SUMPA,
		        SUM(AB) OVER(ORDER BY GAMEDATE, TIME) SUMAB,
		        SUM(H) OVER(ORDER BY GAMEDATE, TIME) SUMH,
		        SUM(B2) OVER(ORDER BY GAMEDATE, TIME) SUMB2,
		        SUM(B3) OVER(ORDER BY GAMEDATE, TIME) SUMB3,
		        SUM(HR) OVER(ORDER BY GAMEDATE, TIME) SUMHR,
		        SUM(R) OVER(ORDER BY GAMEDATE, TIME) SUMR,
		        SUM(RBI) OVER(ORDER BY GAMEDATE, TIME) SUMRBI,
		        SUM(SB) OVER(ORDER BY GAMEDATE, TIME) SUMSB,
		        SUM(CS) OVER(ORDER BY GAMEDATE, TIME) SUMCS,
		        SUM(BB) OVER(ORDER BY GAMEDATE, TIME) SUMBB,
		        SUM(HBP) OVER(ORDER BY GAMEDATE, TIME) SUMHBP,
		        SUM(SO) OVER(ORDER BY GAMEDATE, TIME) SUMSO,
		        SUM(GDP) OVER(ORDER BY GAMEDATE, TIME) SUMGDP,
		        SUM(E) OVER(ORDER BY GAMEDATE, TIME) SUME
		        FROM hitter 
                WHERE ID=#{USER_ID} AND TEAMNAME= #{USER_TEAMNAME} 
		        ORDER BY GAMEDATE , time ) A
		       	WHERE 
		       	<![CDATA[
                ROWNUM <=(
		        ]]>
		            select count(*) from hitter WHERE ID=#{USER_ID} AND TEAMNAME= #{USER_TEAMNAME} )
		            ) 
				WHERE
                <![CDATA[
		            RECORDNO >= (
		        ]]>
		            1
		            ) AND
                RECORDNO = (SELECT COUNT(*) FROM HITTER WHERE ID= #{USER_ID} AND TEAMNAME= #{USER_TEAMNAME} )    
		        ORDER BY GAMEDATE DESC, TIME DESC
	</select>
	
	
	
	
	
	<select id="hitterSelectList" parameterType="java.util.Map" resultType="java.util.Map">
		
		SELECT * FROM (SELECT ROWNUM AS RECORDNO,  A.* FROM 
		    (SELECT GAMEDATE, STADIUM, TIME, ID,TEAMNAME, PA, AB, H, B2, B3, HR, R, RBI, SB, CS, BB, HBP, SO, GDP, E, POS, HORDER,
		        SUM(PA) OVER(ORDER BY GAMEDATE, TIME) SUMPA,
		        SUM(AB) OVER(ORDER BY GAMEDATE, TIME) SUMAB,
		        SUM(H) OVER(ORDER BY GAMEDATE, TIME) SUMH,
		        SUM(B2) OVER(ORDER BY GAMEDATE, TIME) SUMB2,
		        SUM(B3) OVER(ORDER BY GAMEDATE, TIME) SUMB3,
		        SUM(HR) OVER(ORDER BY GAMEDATE, TIME) SUMHR,
		        SUM(R) OVER(ORDER BY GAMEDATE, TIME) SUMR,
		        SUM(RBI) OVER(ORDER BY GAMEDATE, TIME) SUMRBI,
		        SUM(SB) OVER(ORDER BY GAMEDATE, TIME) SUMSB,
		        SUM(CS) OVER(ORDER BY GAMEDATE, TIME) SUMCS,
		        SUM(BB) OVER(ORDER BY GAMEDATE, TIME) SUMBB,
		        SUM(HBP) OVER(ORDER BY GAMEDATE, TIME) SUMHBP,
		        SUM(SO) OVER(ORDER BY GAMEDATE, TIME) SUMSO,
		        SUM(GDP) OVER(ORDER BY GAMEDATE, TIME) SUMGDP,
		        SUM(E) OVER(ORDER BY GAMEDATE, TIME) SUME
		        FROM hitter
		        WHERE ID= #{USER_ID}
		        ORDER BY GAMEDATE , time) A
		       		<![CDATA[
		       	WHERE ROWNUM <=(
		            ]]>
		            select count(*) from hitter WHERE ID=#{USER_ID} )
		            ) 
				WHERE 
		            <![CDATA[
		            RECORDNO > (
		            ]]>
		            (select count(*) from hitter WHERE ID=#{USER_ID} ) 
		            - 5
		            ) 
		        ORDER BY GAMEDATE DESC, TIME DESC
	</select>
	
	
	<select id="infiniteScrollDown" parameterType="java.util.Map" resultType="java.util.Map">
		
		SELECT * FROM (SELECT ROWNUM AS RECORDNO,  A.* FROM 
		    (SELECT GAMEDATE, STADIUM, TIME, ID,TEAMNAME, PA, AB, H, B2, B3, HR, R, RBI, SB, CS, BB, HBP, SO, GDP, E, POS, HORDER,
		        SUM(PA) OVER(ORDER BY GAMEDATE, TIME) SUMPA,
		        SUM(AB) OVER(ORDER BY GAMEDATE, TIME) SUMAB,
		        SUM(H) OVER(ORDER BY GAMEDATE, TIME) SUMH,
		        SUM(B2) OVER(ORDER BY GAMEDATE, TIME) SUMB2,
		        SUM(B3) OVER(ORDER BY GAMEDATE, TIME) SUMB3,
		        SUM(HR) OVER(ORDER BY GAMEDATE, TIME) SUMHR,
		        SUM(R) OVER(ORDER BY GAMEDATE, TIME) SUMR,
		        SUM(RBI) OVER(ORDER BY GAMEDATE, TIME) SUMRBI,
		        SUM(SB) OVER(ORDER BY GAMEDATE, TIME) SUMSB,
		        SUM(CS) OVER(ORDER BY GAMEDATE, TIME) SUMCS,
		        SUM(BB) OVER(ORDER BY GAMEDATE, TIME) SUMBB,
		        SUM(HBP) OVER(ORDER BY GAMEDATE, TIME) SUMHBP,
		        SUM(SO) OVER(ORDER BY GAMEDATE, TIME) SUMSO,
		        SUM(GDP) OVER(ORDER BY GAMEDATE, TIME) SUMGDP,
		        SUM(E) OVER(ORDER BY GAMEDATE, TIME) SUME
		        FROM hitter
		        WHERE ID= #{USER_ID}
		        ORDER BY GAMEDATE , time) A
		        <![CDATA[
		       	WHERE ROWNUM <=
		        ]]>
		            #{RECORDNO } -1
		            ) 
				WHERE 
		      	<![CDATA[
		            RECORDNO > (
		        ]]>
		            #{RECORDNO } -1
		            - 5
		            ) 
		        ORDER BY GAMEDATE DESC, TIME DESC
	</select>
	
	
	<!--                      멤버 정보 변경할거임                          -->
	
	
	<update id="profileChange" parameterType="java.util.Map">
		UPDATE member SET profile = #{MEMBERPROFILE} where ID = #{USER_ID}
	</update>
	
	<select id="getProfile" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT PROFILE, NAME MNAME from MEMBER where ID = #{USER_ID}
	</select>
	
	
	<!-- select g.*,t.*,(select teamlogo from team  where teamname = g.awayteam) awayteamlogo  from gameschedule g join team t on g.teamname = t.teamname where g.teamname = (select teamname from teammember where id='KIM12'); -->
	
	
</mapper>

